{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macielgaleano/Documents/GitHub/conecta2-client/src/components/Routes/publicRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  _s();\n\n  let loginData = useSelector(state => state);\n  const [isLogin, setIsLogin] = useState(\"false\");\n  loginData.loginReducer.token !== undefined ? setIsLogin(true) : setIsLogin(false);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLogin === false && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 65\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PublicRoute, \"KrUkM7xfOOsKr31I3KzvbFMCX3w=\", false, function () {\n  return [useSelector];\n});\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/macielgaleano/Documents/GitHub/conecta2-client/src/components/Routes/publicRoute.js"],"names":["React","useState","Route","Redirect","useSelector","PublicRoute","component","Component","restricted","rest","loginData","state","isLogin","setIsLogin","loginReducer","token","undefined","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AAAA;;AACrE,MAAIC,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA3B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,OAAD,CAAtC;AACAS,EAAAA,SAAS,CAACI,YAAV,CAAuBC,KAAvB,KAAiCC,SAAjC,GAA6CH,UAAU,CAAC,IAAD,CAAvD,GAAgEA,UAAU,CAAC,KAAD,CAA1E;AAEA,sBACE,QAAC,KAAD,OACMJ,IADN;AAEE,IAAA,MAAM,EAAGQ,KAAD,IACNL,OAAO,KAAK,KAAZ,IAAqBJ,UAArB,gBAAkC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAlC,gBAAwD,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA;AAH5D;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAbD;;GAAMZ,W;UACYD,W;;;KADZC,W;AAeN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  let loginData = useSelector((state) => state);\n  const [isLogin, setIsLogin] = useState(\"false\");\n  loginData.loginReducer.token !== undefined ? setIsLogin(true) : setIsLogin(false);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin === false && restricted ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n"]},"metadata":{},"sourceType":"module"}